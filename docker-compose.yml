services:
  db:
    image: postgres:13
    container_name: taller_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: taller_app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    container_name: taller_web
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_HOST: db
      REDIS_URL: redis://redis:6379/0
      FLASK_DEBUG: 0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
    command: gunicorn -w 4 -k gthread -b 0.0.0.0:5000 app:app
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:5000/health || curl -sf http://localhost:5000/health || exit 1",
        ]
      interval: 15s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: taller_redis
    restart: unless-stopped
    command: redis-server --save "" --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  caddy:
    image: caddy:2
    container_name: taller_caddy
    restart: unless-stopped
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/certs:/etc/ssl/custom:ro

volumes:
  postgres_data:
