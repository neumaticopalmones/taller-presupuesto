name: CI

on:
  push:
    branches: [main, chore/format-lint]
  pull_request:
    branches: [main]

jobs:
  js-lint-format:
    runs-on: ubuntu-latest
    # Ejecuta el job de JS solo si existe el package.json del frontend
    if: ${{ hashFiles('frontend-backup/package.json') != '' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: frontend-backup/package-lock.json
      - name: Install deps (frontend)
        working-directory: frontend-backup
        run: npm install
      - name: Check format
        working-directory: frontend-backup
        run: npm run format:check
      - name: Lint
        working-directory: frontend-backup
        run: npm run lint:check

  py-lint-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt
      - name: Install Python tools
        run: |
          python -m pip install --upgrade pip
          pip install black ruff pytest -r backend/requirements.txt
      - name: Python checks
        run: |
          ruff check
          black --check .
      - name: Run tests
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: test
          DATABASE_URL: "sqlite:///:memory:"
          PYTHONPATH: ${{ github.workspace }}/backend
        run: |
          pytest -q
